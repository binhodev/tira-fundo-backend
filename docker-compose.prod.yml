version: "3.8"

services:
    # Backend Python com IA
    backend:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: removal-bg-backend
        restart: unless-stopped
        environment:
            - HOST=0.0.0.0
            - PORT=8000
            - WORKERS=3
            - LOG_LEVEL=info
            - SUPPRESS_PYTORCH_WARNINGS=true
            - CACHE_DIR=/app/cache
            - MAX_FILE_SIZE=3145728 # 3MB
            - MAX_BATCH_SIZE=3
            - MODEL_CACHE_SIZE=2
            - CORS_ORIGINS=https://seudominio.com,https://www.seudominio.com
        volumes:
            - backend_cache:/app/cache
            - backend_logs:/app/logs
        expose:
            - "8000"
        healthcheck:
            test:
                [
                    "CMD",
                    "python",
                    "-c",
                    "import requests; requests.get('http://localhost:8000/health', timeout=10)",
                ]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 60s
        deploy:
            resources:
                limits:
                    memory: 4G
                    cpus: "3.0"
                reservations:
                    memory: 2G
                    cpus: "1.0"
        networks:
            - removal-bg-network

    # Nginx Reverse Proxy
    nginx:
        image: nginx:alpine
        container_name: removal-bg-nginx
        restart: unless-stopped
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
            - ./nginx/conf.d:/etc/nginx/conf.d:ro
            - nginx_logs:/var/log/nginx
            - ./ssl:/etc/nginx/ssl:ro
        depends_on:
            backend:
                condition: service_healthy
        networks:
            - removal-bg-network

    # Redis para Cache
    redis:
        image: redis:7-alpine
        container_name: removal-bg-redis
        restart: unless-stopped
        command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
        volumes:
            - redis_data:/data
        expose:
            - "6379"
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 30s
            timeout: 10s
            retries: 3
        networks:
            - removal-bg-network

    # Watchtower para atualizações automáticas (opcional)
    watchtower:
        image: containrrr/watchtower
        container_name: removal-bg-watchtower
        restart: unless-stopped
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        command: --interval 3600 --cleanup removal-bg-backend removal-bg-nginx
        environment:
            - WATCHTOWER_NOTIFICATIONS=email
            - WATCHTOWER_NOTIFICATION_EMAIL_FROM=noreply@seudominio.com
            - WATCHTOWER_NOTIFICATION_EMAIL_TO=admin@seudominio.com
            - WATCHTOWER_NOTIFICATION_EMAIL_SERVER=smtp.gmail.com
            - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT=587
        profiles:
            - production

volumes:
    backend_cache:
        driver: local
    backend_logs:
        driver: local
    redis_data:
        driver: local
    nginx_logs:
        driver: local

networks:
    removal-bg-network:
        driver: bridge
        ipam:
            config:
                - subnet: 172.20.0.0/16
